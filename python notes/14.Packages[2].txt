Packages:

   Module is a Python script with .py extension and contains objects such as classes, functions etc. 
   Packages in Python extend the concept of modular approach further. 
   Package is a folder containing one or more module files; additionally a special file "__init__.py" file which may be empty but may contain the package list.

   Let us create a Python package with the name mypackage. 
   Create an outer folder to hold the contents of mypackage. Let its name be packagedemo.

Inside it, create another folder mypackage. This will be the Python package we are going to construct.Two Python modules areafunctions.py and mathfunctions.py will be created inside mypackage.

Create an empty "__.init__.py" file inside mypackage folder.

Inside the outer folder, we shall later on store a Python script example.py to test our package.

save the following two Python modules in mypackage folder.

# mathfunctions.py
def sum(x,y):
   val = x+y
   return val
   
def average(x,y):
   val = (x+y)/2
   return val

def power(x,y):
   val = x**y
   return val

Create another Python script:

# areafunctions.py
def rectangle(w,h):
   area = w*h
   return area
   
def circle(r):
   import math
   area = math.pi*math.pow(r,2)
   return area

Let us now test the myexample package with the help of a Python script above this package folder. Refer to the folder structure above.

#example.py
from  mypackage import areafunctions
print ("Area :", areafunctions.rectangle(10,20))
print("Area :",areafunctions.circle(4))

output:
Area : 200
Area : 50.26548245743669

from python_packages import areafunctions,mathfunctions
print ("Area :", areafunctions.rectangle(10,20))
print("Area :",areafunctions.circle(4))
print("val :", mathfunctions.sum(4,8))
print("val : , mathfunctions.average(4,8))
print("val :", mathfunctions.power(4,8))

output:
Area : 200
Area : 50.26548245743669
val : 12
val : 6.0
val : 65536

first.py(module 1)
def tuna():
    print("i am from first module")
    return

second.py(module 2)
def tuna_second():
    print("i am from second module")
    return

main file:
from python_packages import first,second
second.tuna_second()
first.tuna()

output:
i am from second module
i am from first module


first1.py(module 1)
def demo(name):
    print("hi"+name)
    return

second1.py(module 2)
def add(a,b):
    print(a+b)
    return
def sub(a,b):
    print(a-b)
    return
def mul(a,b):
    print(a*b)
    return

main file:
from python_packages import first1,second1
second1.add(5,6)
second1.sub(3,2)
first1.demo("jenny")

output:
11
1
hijenny

first2.py(module 1)
def  decision(name):
    print("hello")
    return

second2.py(module 2)
def  dec(a,b,c):
    print(a+b+c)
    return
def  dec1(a,b,c):
    print(a-b-c)
    return

main file:
from python_packages import first2,second2
first2.decision("hi")
second2.dec(6,7,8)
second2.dec1(8,6,1)

output:
hello
21
1

Define Package List
  You can put selected functions or any other resources from the package in the "__init__.py" file. Let us put the following code in it.

from .areafunctions import circle
from .mathsfunctions import sum, power

To import the available functions from this package, save the following script as testpackage.py, above the package folder as before.

#testpackage.py
from mypackage import power, circle

print ("Area of circle:", circle(5))
print ("10 raised to 2:", power(10,2))

output:

Area of circle: 78.53981633974483
10 raised to 2: 100

